'use strict';

var path = require('path');
var assert = require('yeoman-generator').assert;
var helpers = require('yeoman-generator').test;
var fs = require('fs');


var internals = {};


describe('node:app', function() {

  describe('running on new project', function() {

    before(function(done) {
      internals.answers = {
        name: 'test',
        description: 'Node js project generated by The Node code generator',
        homepage: 'https://github.com/test',
        main: 'server.js',
        keywords: 'this,is,a,test',
        githubUrl: 'git+https://github.com/test'
      };

      helpers.run(path.join(__dirname, '../generators/app'))
        .withOptions({ 'skip-install' : true })
        .withPrompts(internals.answers)
        .on('end', done);
    });

    it('create files', function() {
      assert.file([
        '.eslintignore',
        '.eslintrc',
        '.gitignore',
        'server.js',
        'package.json',
        'README.md'
      ]);
    });

    it('creates a proper package.json', function() {
      assert.file('package.json');
      internals.assertJSONFileContains('package.json', {
        name: 'test',
        version: '0.0.1',
        description: 'Node js project generated by The Node code generator',
        homepage: 'https://github.com/test',
        license: 'UNLICENSED',
        repository: {
          type: 'git',
          url: 'git+https://github.com/test'
        },
        keywords: 'this,is,a,test'
      });
    });

    it('creates a proper README.md', function() {
      assert.file('package.json');

      assert.fileContent('README.md', '# test');
    });

  });

});


internals.assertObjectContains = function(obj, content) {
  Object.keys(content).forEach(function(key) {
    if (typeof content[key] === 'object') {
      internals.assertObjectContains(content[key], obj[key]);
      return;
    }

    assert.equal(content[key], obj[key]);
  });
};


internals.assertJSONFileContains = function(filename, content) {
  var obj = JSON.parse(fs.readFileSync(filename, 'utf8'));
  internals.assertObjectContains(obj, content);
};
